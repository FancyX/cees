##显示在右侧侧内容
<div>
##工具条
    <div class="content-bar">
        <div class="layui-form-item">

            <div class="layui-inline">
                <label class="layui-form-label" style="width: 60px;">制模日期</label>
                <div class="layui-input-inline" style="width: 150px;">
                    <input type="text" class="layui-input" id="beginTime" placeholder="yyyy-MM-dd">
                </div>

                <label class="layui-form-label" style="width: 20px;">至</label>

                <div class="layui-input-inline" style="width: 150px;">
                    <input type="text" class="layui-input" id="endTime" placeholder="yyyy-MM-dd">
                </div>
                <div class="layui-input-inline" style="width: 64px">
                    <button class="layui-btn " onclick="initTable()">查询</button>
                </div>

                <div class="layui-input-inline" style="width: 64px">
                    <button id="deleteSelected" class="layui-btn layui-btn-danger" data-type="getCheckData">删除选中
                    </button>
                </div>
            </div>
        </div>
    </div>
##表格
    <table id="tableData" lay-filter="test"></table>
##表格的工具条
    <script type="text/html" id="barDemo">
        ##<a class="layui-btn layui-btn-primary layui-btn-xs" lay-event="detail">查看</a>
        <a class="layui-btn layui-btn-xs" lay-event="edit">编辑</a>
        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    </script>
</div>

##弹窗

##查看和修改 - 只有查看权限时将所有按钮输入框变成不可使用
<form id="updateModal" class="layui-form my-layer-modal none" action="">

    <div class="layui-inline">
        <label class="layui-form-label">工程抗压序号</label>
        <div class="layui-input-inline" style="width: 100px;">
            <input type="text" name="price_max" autocomplete="off" class="layui-input">
        </div>
    </div>
</form>


<script>

    window.onload = function () {
        init();
    };

    function init() {
        //加载模块插件
        initModels();
        //初始化用户权限限制
        initUserPower();
        //初始化表格
        initTable();
    };


    //初始化固定模块
    function initModels() {
        layui.use(['form', 'laydate', 'laypage', 'layer', 'table', 'carousel', 'upload', 'element'], function () {
            var laydate = layui.laydate,//日期
                    laypage = layui.laypage,//分页
                    layer = layui.layer, //弹层
                    table = layui.table,//表格
                    carousel = layui.carousel, //轮播
                    upload = layui.upload,//上传
                    element = layui.element, //元素操作
                    form = layui.form; //表单

            //执行一个laydate实例
            laydate.render({
                elem: '#beginTime' //指定元素
            });

            laydate.render({
                elem: '#endTime' //指定元素
            });
        });
    }

    //获取用户权限
    function initUserPower() {
        //todo - 从父页面获取用户用户权限数据根据本页面情况隐藏或者不隐藏
    }

    //弹出失败信息
    function failAlert(msg) {
        layer.alert(msg, {
            icon: 2,
            skin: 'layer-ext-moon',
        });
    }

    //初始化表格
    function initTable() {
        //初始化table表格
        var loadTable = function (json) {

            if (json == null || json == undefined) {
                return;
            }

            //获取表头
            var getCols = function (json) {

                var data = json.data;
                var cols = [[]];
                cols[0][0] = {field: 'checkbox', type: 'checkbox', title: '全选'};
                cols[0][1] = {field: 'numbers', type: 'numbers', title: '序号'};

                for (var i = 0; i < data.length; i++) {

                    var row = data[i];
                    var gridmc = row['gridmc'];
                    var zw = row['zw'];
                    var col = {field: gridmc, title: zw};
                    cols[0].push(col);
                }

                var toolbar = {fixed: 'right', align: 'center', toolbar: '#barDemo', width: 200};
                cols[0].push(toolbar);

                return cols;
            }

            //table表格初始化参数
            var tableOptions = {
                elem: '#tableData',
                height: 500,
                url: '/shiYanXiangMu/hunNIngTuKangYa/search', //数据接口
                page: true,//开启分页
                request: {
                    pageName: 'page', //页码的参数名称，默认：page
                    limitName: 'limit' //每页数据量的参数名，默认：limit
                },
                response: {
                    statusName: 'code',//数据状态的字段名称，默认：code
                    statusCode: 0,//成功的状态码，默认：0
                    msgName: 'msg',//状态信息的字段名称，默认：msg
                    countName: 'count', //数据总数的字段名称，默认：count
                    dataName: 'data' //数据列表的字段名称，默认：data
                },
                where: {
                    zmrqstart: jQuery("#beginTime").val(), //制模日期开始
                    zmrqend: jQuery("#endTime").val()  //制模日期结束
                },
                skin: {
                    size: 'lg'
                },
                cols: getCols(json)
            };

            //执行一个 table 实例
            layui.use(['table'], function () {
                var table = layui.table;//表格
                table.render(tableOptions);

                //监听工具条
                //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                table.on('tool(test)', function (obj) {
                    var data = obj.data //获得当前行数据
                            , layEvent = obj.event; //获得 lay-event 对应的值
                    if (layEvent === 'del') {
                        layer.confirm('真的删除行么', {
                            icon: 3,
                            title: '提示'
                        }, function (index) {
                            obj.del(); //删除对应行（tr）的DOM结构
                            layer.close(index);
                            //向服务端发送删除指令
                        });
                    } else if (layEvent === 'edit') {
//                        layer.msg('编辑操作');
                        layer.open({
                            type: 1,
                            area: ['1100px', '600px'], //宽高
                            content: jQuery('#updateModal'),
                            title: "修改"
                        });
                    }
                });

                var active = {
                    getCheckData: function () { //获取选中数据
                        var checkStatus = table.checkStatus('tableData')
                                , data = checkStatus.data;
                        layer.alert(JSON.stringify(data));
                    }, getCheckLength: function () { //获取选中数目
                        var checkStatus = table.checkStatus('tableData')
                                , data = checkStatus.data;
                        layer.msg('选中了：' + data.length + ' 个');
                    }, isAll: function () { //验证是否全选
                        var checkStatus = table.checkStatus('tableData');
                        layer.msg(checkStatus.isAll ? '全选' : '未全选')
                    }
                };

                $('#deleteSelected').on('click', function () {
                    var type = $(this).data('type');
                    active[type] ? active[type].call(this) : '';
                });
            });


        }

        //检查返回值并执行回调
        var checkResult = function (resultJson, callback) {
            if (resultJson == null || resultJson == undefined) {
                failAlert("获取数据失败！");
                return;
            } else {
                if (resultJson.code == 0) {
                    callback(resultJson);
                }
            }
        };

        //请求列数据-成功后请求表数据
        jQuery.ajax({
            type: 'post',
            url: "/shiYanXiangMu/hunNIngTuKangYa/getShowCol.action",
            dataType: 'json',
            data: {},
            async: false,
            success: function (json) {
                checkResult(json, loadTable);
            },
            err: function (err) {
                failAlert("连接服务器失败！");
            }
        });
    }


</script>